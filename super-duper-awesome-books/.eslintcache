[{"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\index.tsx":"1","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\reportWebVitals.ts":"2","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\App.tsx":"3","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\pages\\SearchPage.tsx":"4","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\pages\\BookDetailPage.tsx":"5","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\ErrorText.ts":"6","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\BookSearchForm.tsx":"7","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\BookDetail.tsx":"8","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\BookList.tsx":"9","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\SharedBackGround.tsx":"10","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\utils\\authorLogic.ts":"11","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\fancy-border\\FancyBorder.tsx":"12","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\book-rating\\CurrentRating.tsx":"13","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\book-rating\\FeedbackRating.tsx":"14","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\user-profile\\MyProfile.tsx":"15","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\user-profile\\OtherProfile.tsx":"16","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\footer\\Footer.tsx":"17","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\pages\\HomePage.tsx":"18","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\pages\\RegisterPage.tsx":"19","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\navigation\\NavigationBar.tsx":"20","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\login\\LoginControl.tsx":"21","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\pages\\LoginPage.tsx":"22","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\fancy-border\\LoginBorder.tsx":"23"},{"size":221,"mtime":1610547043258,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1610288844011,"results":"26","hashOfConfig":"25"},{"size":1734,"mtime":1610553780508,"results":"27","hashOfConfig":"25"},{"size":2025,"mtime":1610550441685,"results":"28","hashOfConfig":"25"},{"size":1340,"mtime":1610552711292,"results":"29","hashOfConfig":"25"},{"size":161,"mtime":1610290550598,"results":"30","hashOfConfig":"25"},{"size":1733,"mtime":1610549167516,"results":"31","hashOfConfig":"25"},{"size":6884,"mtime":1610551280637,"results":"32","hashOfConfig":"25"},{"size":1700,"mtime":1610554334488,"results":"33","hashOfConfig":"25"},{"size":139,"mtime":1610330459212,"results":"34","hashOfConfig":"25"},{"size":369,"mtime":1610290414439,"results":"35","hashOfConfig":"25"},{"size":351,"mtime":1610470611711,"results":"36","hashOfConfig":"25"},{"size":535,"mtime":1610315037236,"results":"37","hashOfConfig":"25"},{"size":1137,"mtime":1610315121858,"results":"38","hashOfConfig":"25"},{"size":8627,"mtime":1610480619416,"results":"39","hashOfConfig":"25"},{"size":6630,"mtime":1610325788642,"results":"40","hashOfConfig":"25"},{"size":670,"mtime":1610555157877,"results":"41","hashOfConfig":"25"},{"size":1826,"mtime":1610555207177,"results":"42","hashOfConfig":"25"},{"size":4434,"mtime":1610548246157,"results":"43","hashOfConfig":"25"},{"size":1302,"mtime":1610550342839,"results":"44","hashOfConfig":"25"},{"size":1199,"mtime":1610510264967,"results":"45","hashOfConfig":"25"},{"size":2884,"mtime":1610555261965,"results":"46","hashOfConfig":"25"},{"size":358,"mtime":1610548188210,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wo9ay9",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\index.tsx",[],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\reportWebVitals.ts",[],["101","102"],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\App.tsx",["103","104"],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\pages\\SearchPage.tsx",["105","106","107","108","109","110","111"],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\pages\\BookDetailPage.tsx",["112","113"],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\ErrorText.ts",[],["114","115"],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\BookSearchForm.tsx",["116","117","118","119"],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\BookDetail.tsx",["120","121","122","123","124","125","126","127","128","129"],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\BookList.tsx",[],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\SharedBackGround.tsx",[],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\utils\\authorLogic.ts",[],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\fancy-border\\FancyBorder.tsx",[],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\book-rating\\CurrentRating.tsx",["130"],"import React from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function SimpleRating() {\r\n  const [value, setValue] = React.useState<number | null>(2);\r\n\r\n  return (\r\n    <div>\r\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n        <Typography component=\"legend\">Current Rating</Typography>\r\n        <Rating name=\"read-only\" value={value} readOnly />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n",["131","132"],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\book-rating\\FeedbackRating.tsx",[],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\user-profile\\MyProfile.tsx",["133","134","135","136","137","138","139","140","141","142","143","144"],"import { Button, Card, CardActions, CardContent, CardMedia, createStyles, Divider, List, ListItem, ListItemText, makeStyles, TextField, Theme, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport ScrollUpButton from \"react-scroll-up-button\";\r\nimport Bookshelf from './Bookshelf.jpg'\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            maxWidth: 345,\r\n            \"display\": \"block\",\r\n            \"margin-left\": \"auto\",\r\n            \"margin-right\": \"auto\",\r\n        },\r\n        root_review: {\r\n            '& .MuiInput-underline': {\r\n                // Remove the ripple effect on input\r\n                '&:after': {\r\n                    borderBottom: 'initial',\r\n                },\r\n            },\r\n            width: '100%',\r\n            maxWidth: '100ch',\r\n            backgroundColor: theme.palette.background.paper,\r\n\r\n\r\n        },\r\n        inline: {\r\n            display: 'inline',\r\n        },\r\n        review_container: {\r\n            \"display\": \"block\",\r\n            \"margin-left\": \"auto\",\r\n            \"margin-right\": \"auto\",\r\n            \"margin-top\": \"5vh\",\r\n            \"width\": \"40%\",\r\n        },\r\n        editButton: {\r\n            fontSize: \"1.5vh\",\r\n            float: \"right\",\r\n            bottom: \"0\"\r\n        }\r\n    }),\r\n);\r\n\r\n//Requirements: Prop user object with username and userid, should be enclosed in an authentication component\r\nexport const MyProfile: React.FunctionComponent<any> = (props) => {\r\n    const [userDescription, changeDescription] = useState(\"\")\r\n    const [userReviews, changeReviews] = useState(new Array<any>())\r\n    const [profileImage, changeProfileImage] = useState(\"\")\r\n    const [offset, changeOffset] = useState(0)\r\n    const [limit, changeLimit] = useState(5)\r\n    const [descriptionEditOpened, changeDescriptionEditingStatus] = useState(false)\r\n\r\n    //Runs on first load\r\n    useEffect(() => {\r\n        //TODO: Replace example content with content from db, fetched using the user's ID as given by props\r\n\r\n\r\n        let exampleDescription = \"I am the greatest person in the entirety of the universe.\"\r\n        changeDescription(exampleDescription)\r\n\r\n\r\n        // let exampleReviews: Object[] = [\r\n        //     {\r\n        //         bookId: 1,\r\n        //         reviewId: 1,\r\n        //         reviewTitle: \"Absolutely terrible\",\r\n        //         reviewDescription: \"This book made my life worse than ever before after reading the first 2 pages, thanks.\",\r\n        //         rating: 0\r\n        //     },\r\n        //     {\r\n        //         bookId: 2,\r\n        //         reviewId: 2,\r\n        //         reviewTitle: \"Greatest book ever written in the history of the universe.\",\r\n        //         reviewDescription: \"You must buy it and read it. Also, buy one for your parents, your siblings, your children, your dog. They will love it and forever love you for buying it for them, I promise you.\",\r\n        //         rating: 10\r\n        //     },\r\n\r\n        // ]\r\n\r\n        // changeReviews(exampleReviews)\r\n\r\n\r\n        //TO DO: fetch pfp from db \r\n\r\n        getProfileImage();\r\n\r\n    }, [])\r\n\r\n    // let showPreviousReviews = () => {\r\n    //     if (limit - 5 > 0) {\r\n    //         changeOffset(limit - 5)\r\n    //         changeLimit(limit - 5)\r\n    //     }\r\n\r\n    // }\r\n\r\n    // let showNextReviews = () => {\r\n    //     if (limit <= userReviews.length) {\r\n    //         changeOffset(limit)\r\n    //         changeLimit(limit + 5)\r\n    //     }\r\n\r\n\r\n    // }\r\n\r\n    let getProfileImage = async () => {\r\n\r\n        //get image from database\r\n        let res = await axios.get(\"https://upload.wikimedia.org/wikipedia/commons/c/cc/Tellissaare.JPG\",\r\n            { responseType: 'arraybuffer' }\r\n        )\r\n        const base64 = btoa(\r\n            new Uint8Array(res.data).reduce(\r\n                (data, byte) => data + String.fromCharCode(byte),\r\n                '',\r\n            ),\r\n        );\r\n        changeProfileImage(\"data:;base64,\" + base64)\r\n    }\r\n\r\n    let toggleEditDescription = () => {\r\n        changeDescriptionEditingStatus(!descriptionEditOpened)\r\n    }\r\n    let enterKeyPress = (e: React.KeyboardEvent) => {\r\n        if (e.key == 'Enter' && descriptionEditOpened) {\r\n            //TO DO: post request to change description\r\n\r\n            toggleEditDescription()\r\n\r\n        }\r\n    }\r\n\r\n    let handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        changeDescription(event.target.value)\r\n    }\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div className=\"content\">\r\n\r\n            <div className=\"dashboard\" style={{ marginTop: '6%' }}>\r\n                <Card className={classes.root}>\r\n\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt={props.user.username}\r\n                        height=\"340\"\r\n                        image={profileImage}\r\n                        title={props.user.username}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {props.user.username}\r\n                        </Typography>\r\n                        {!descriptionEditOpened &&\r\n\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {userDescription}\r\n                            </Typography>\r\n                        }\r\n                        {descriptionEditOpened &&\r\n                            <TextField\r\n                                id=\"outlined-multiline-flexible\"\r\n                                multiline\r\n                                rowsMax={4}\r\n                                value={userDescription}\r\n                                onKeyPress={enterKeyPress}\r\n                                onChange={handleDescriptionChange}\r\n                                variant=\"outlined\"\r\n                            />\r\n                        }\r\n\r\n                        <Button className={classes.editButton} onClick={toggleEditDescription}>Edit Description</Button>\r\n                    </CardContent>\r\n\r\n                    <CardActions>\r\n\r\n                    </CardActions>\r\n                </Card>\r\n\r\n            </div>\r\n\r\n            {/* <div className={classes.review_container}>\r\n\r\n                <List className={classes.root_review}>\r\n\r\n                    {userReviews.slice(limit - 5, limit).map((review, i) => {\r\n                        return (\r\n\r\n                            <div className=\"review-element\">\r\n\r\n                                <ListItem alignItems=\"flex-start\">\r\n\r\n                                    <ListItemText\r\n                                        //TODO: Add links to the books\r\n                                        primary={review.reviewTitle}\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                                <Typography\r\n                                                    component=\"span\"\r\n                                                    variant=\"body2\"\r\n                                                    className={classes.inline}\r\n                                                    color=\"textPrimary\"\r\n                                                >\r\n                                                    {\"Rating: \" + review.rating}\r\n                                                </Typography>\r\n                                                {\" — \" + review.reviewDescription}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" component=\"li\" />\r\n                            </div>\r\n\r\n                        )\r\n                    }) */}\r\n\r\n            {/* }</List> */}\r\n            {/* <div><button type=\"button\" onClick={() => showPreviousReviews()}>Previous 10</button></div>\r\n                <div><button type=\"button\" onClick={() => showNextReviews()}>Next 10</button></div> */}\r\n\r\n\r\n            {/* </div> */}\r\n            <div style={{ backgroundImage: `url(${Bookshelf})`, marginTop: '2%', marginLeft:'1%', marginRight:'1%'}}>\r\n                <br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\user-profile\\OtherProfile.tsx",["145","146","147","148"],"import { Button, Card, CardActions, CardContent, CardMedia, createStyles, Divider, List, ListItem,ListItemText, makeStyles, Theme, Typography} from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n        \"display\": \"block\",\r\n        \"margin-left\": \"auto\",\r\n        \"margin-right\": \"auto\",\r\n    },\r\n    root_review: {\r\n        '& .MuiInput-underline': {\r\n            // Remove the ripple effect on input\r\n            '&:after': {\r\n              borderBottom: 'initial',\r\n            },\r\n        },\r\n      width: '100%',\r\n      maxWidth: '100ch',\r\n      backgroundColor: theme.palette.background.paper,\r\n\r\n\r\n    },\r\n    inline: {\r\n      display: 'inline',\r\n    },\r\n    review_container: {\r\n        \"display\": \"block\",\r\n        \"margin-left\": \"auto\",\r\n        \"margin-right\": \"auto\",\r\n        \"margin-top\": \"5vh\",\r\n        \"width\": \"40%\",\r\n    },\r\n    editButton: {\r\n        fontSize: \"1.5vh\",\r\n        float: \"right\",\r\n        bottom: \"0\"\r\n    }\r\n  }),\r\n);\r\n\r\n//Requirements: Prop user object with username and userid, should be enclosed in an authentication component\r\nexport const OtherProfile: React.FunctionComponent<any> = (props) => {\r\n    const [userDescription, changeDescription] = useState(\"I am the greatest person in the entirety of the universe.\")\r\n    const [userReviews, changeReviews] = useState(new Array<any>())\r\n    const [profileImage, changeProfileImage] = useState(\"\")\r\n    const [offset, changeOffset] = useState(0)\r\n    const [limit, changeLimit] = useState(5)\r\n    const [descriptionEditOpened, changeDescriptionEditingStatus] = useState(false)\r\n\r\n    //Runs on first load\r\n    useEffect(() => {\r\n        //TODO: Replace example content with content from db, fetched using the user's ID as given by props\r\n\r\n\r\n        let exampleReviews: Object[] = [\r\n            {\r\n                bookId: 1,\r\n                reviewId: 1,\r\n                reviewTitle: \"Absolutely terrible\",\r\n                reviewDescription: \"This book made my life worse than ever before after reading the first 2 pages, thanks.\",\r\n                rating: 0\r\n            },\r\n            {\r\n                bookId: 2,\r\n                reviewId: 2,\r\n                reviewTitle: \"Greatest book ever written in the history of the universe.\",\r\n                reviewDescription: \"You must buy it and read it. Also, buy one for your parents, your siblings, your children, your dog. They will love it and forever love you for buying it for them, I promise you.\",\r\n                rating: 10\r\n            },\r\n\r\n        ]\r\n\r\n        changeReviews(exampleReviews)\r\n\r\n\r\n        //fetch pfp from db \r\n\r\n        getProfileImage();\r\n\r\n    }, [])\r\n\r\n    let showPreviousReviews = () => {\r\n        if (limit - 5 > 0) {\r\n            changeOffset(limit - 5)\r\n            changeLimit(limit - 5)\r\n        }\r\n\r\n    }\r\n\r\n    let showNextReviews = () => {\r\n        if (limit <= userReviews.length) {\r\n            changeOffset(limit)\r\n            changeLimit(limit + 5)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    let getProfileImage = async () => {\r\n\r\n        //get image from database\r\n        let res = await axios.get(\"https://upload.wikimedia.org/wikipedia/commons/c/cc/Tellissaare.JPG\",\r\n            { responseType: 'arraybuffer' }\r\n        )\r\n        const base64 = btoa(\r\n            new Uint8Array(res.data).reduce(\r\n                (data, byte) => data + String.fromCharCode(byte),\r\n                '',\r\n            ),\r\n        );\r\n        changeProfileImage(\"data:;base64,\" + base64)\r\n\r\n\r\n    }\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"dashboard\">\r\n                <Card className={classes.root}>\r\n                    \r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={props.user.username}\r\n                            height=\"140\"\r\n                            image={profileImage}\r\n                            title={props.user.username}\r\n                        />\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                {props.user.username}\r\n                            </Typography>\r\n                                 \r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                { userDescription}\r\n                            </Typography>\r\n         \r\n                        </CardContent>\r\n                   \r\n                    <CardActions>\r\n                        <Button size=\"small\" color=\"primary\">\r\n                            Add Friend\r\n                    </Button>\r\n\r\n                    </CardActions>\r\n                </Card>\r\n\r\n            </div>\r\n\r\n            <div className={classes.review_container}>\r\n\r\n            <List className={classes.root_review}>\r\n\r\n                {userReviews.slice(limit - 5, limit).map((review, i) => {\r\n                    return (\r\n                        \r\n                    <div className= \"review-element\">\r\n                \r\n                    <ListItem alignItems=\"flex-start\">\r\n                \r\n                        <ListItemText\r\n                            primary={review.reviewTitle}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.inline}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        {\"Rating: \"+ review.rating}\r\n                                    </Typography>\r\n                                    {\" — \"+review.reviewDescription}\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                    </div>\r\n                            \r\n                    )\r\n                }) \r\n                \r\n                }</List>\r\n                <div><button type=\"button\" onClick={() => showPreviousReviews()}>Previous 10</button></div>\r\n                <div><button type=\"button\" onClick={() => showNextReviews()}>Next 10</button></div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\footer\\Footer.tsx",[],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\pages\\HomePage.tsx",["149","150","151","152","153"],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\pages\\RegisterPage.tsx",["154","155"],"import React, { SyntheticEvent, useState } from 'react';\r\nimport { Button, Grid, TextField } from '@material-ui/core'\r\nimport axios from 'axios';\r\nimport NavigationBar from '../components/navigation/NavigationBar';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport LoginBorder from '../components/fancy-border/LoginBorder';\r\nimport FooterPage from '../components/footer/Footer';\r\n\r\ninterface IRegister {\r\n    username: string,\r\n    password: string,\r\n    firstname: string,\r\n    lastname: string,\r\n    email: string\r\n\r\n}\r\n\r\n\r\nexport const Register: React.FunctionComponent<IRegister> = (props) => {\r\n\r\n    const [username, changeUsername] = useState(\"\")\r\n    const [password, changePassword] = useState(\"\")\r\n    const [firstname, changeFirstname] = useState(\"\")\r\n    const [lastname, changeLastname] = useState(\"\")\r\n    const [email, changeEmail] = useState(\"\")\r\n\r\n\r\n\r\n    const handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        changeUsername(e.target.value)\r\n    }\r\n    const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        changePassword(e.target.value)\r\n    }\r\n    const handleFirstnameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        changeFirstname(e.target.value)\r\n    }\r\n    const handleLastnameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        changeLastname(e.target.value)\r\n    }\r\n    const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        changeEmail(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = async (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n\r\n        const newUser = {\r\n            userName: username,\r\n            firstName: firstname,\r\n            lastName: lastname,\r\n            userEmail: email,\r\n            userPassword: password\r\n        }\r\n\r\n        axios.post(`http://localhost:8080/users`, { newUser })\r\n            .then(res => {\r\n                console.log(res);\r\n                console.log(res.data);\r\n            })\r\n    }\r\n    // const submitLogin = async (e:SyntheticEvent) => {\r\n    //     //wwhat does submit normally do?\r\n    //     e.preventDefault()\r\n    //     //send username and password to a remote location to get the user info/auth token\r\n    //     try {\r\n    //         let user = await e720Login(username, password)\r\n    //         props.updateCurrentUser(user)\r\n    //     }catch(e){\r\n    //         changePassword(\"\")\r\n    //         toast.error(e.message)\r\n    //     }\r\n    // }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <NavigationBar />\r\n            <LoginBorder>\r\n                <div style={{marginTop:'20%'}}>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"center\"\r\n                            spacing={2}\r\n                        >\r\n                            <Grid item>\r\n                                <div >\r\n                                    <TextField value={username} onChange={handleUsernameChange} id=\"username\" label=\"Username\" variant=\"outlined\" autoComplete=\"off\" /> &nbsp;\r\n                                <TextField value={password} onChange={handlePasswordChange} id=\"password\" label=\"Password\" variant=\"outlined\" type=\"password\" />\r\n\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField value={firstname} onChange={handleFirstnameChange} id=\"firstname\" label=\"Firstname\" variant=\"outlined\" />  &nbsp;\r\n                            <TextField value={lastname} onChange={handleLastnameChange} id=\"lastname\" label=\"Lastname\" variant=\"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField value={email} onChange={handleEmailChange} id=\"email\" label=\"Email\" variant=\"outlined\" type=\"email\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button onClick={handleSubmit} href=\"/\" type=\"submit\" variant=\"outlined\">Register</Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </form>\r\n\r\n\r\n                </div>\r\n            </LoginBorder>\r\n            <FooterPage/>\r\n        </div>\r\n\r\n\r\n    )\r\n}","C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\navigation\\NavigationBar.tsx",["156","157","158","159"],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\login\\LoginControl.tsx",[],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\pages\\LoginPage.tsx",["160"],"C:\\Users\\Henry\\Desktop\\reactApp\\book-test\\super-duper-awesome-books\\src\\components\\fancy-border\\LoginBorder.tsx",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":2,"column":50,"nodeType":"167","messageId":"168","endLine":2,"endColumn":59},{"ruleId":"165","severity":1,"message":"169","line":17,"column":16,"nodeType":"167","messageId":"168","endLine":17,"endColumn":26},{"ruleId":"165","severity":1,"message":"170","line":8,"column":27,"nodeType":"167","messageId":"168","endLine":8,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":8,"column":35,"nodeType":"167","messageId":"168","endLine":8,"endColumn":40},{"ruleId":"165","severity":1,"message":"172","line":8,"column":42,"nodeType":"167","messageId":"168","endLine":8,"endColumn":48},{"ruleId":"165","severity":1,"message":"173","line":8,"column":50,"nodeType":"167","messageId":"168","endLine":8,"endColumn":54},{"ruleId":"165","severity":1,"message":"166","line":8,"column":56,"nodeType":"167","messageId":"168","endLine":8,"endColumn":65},{"ruleId":"165","severity":1,"message":"174","line":13,"column":7,"nodeType":"167","messageId":"168","endLine":13,"endColumn":22},{"ruleId":"165","severity":1,"message":"175","line":19,"column":7,"nodeType":"167","messageId":"168","endLine":19,"endColumn":23},{"ruleId":"165","severity":1,"message":"173","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"176","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":18},{"ruleId":"161","replacedBy":"177"},{"ruleId":"163","replacedBy":"178"},{"ruleId":"165","severity":1,"message":"170","line":4,"column":27,"nodeType":"167","messageId":"168","endLine":4,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":4,"column":35,"nodeType":"167","messageId":"168","endLine":4,"endColumn":40},{"ruleId":"165","severity":1,"message":"172","line":4,"column":42,"nodeType":"167","messageId":"168","endLine":4,"endColumn":48},{"ruleId":"165","severity":1,"message":"173","line":4,"column":50,"nodeType":"167","messageId":"168","endLine":4,"endColumn":54},{"ruleId":"165","severity":1,"message":"179","line":2,"column":82,"nodeType":"167","messageId":"168","endLine":2,"endColumn":86},{"ruleId":"165","severity":1,"message":"180","line":2,"column":106,"nodeType":"167","messageId":"168","endLine":2,"endColumn":110},{"ruleId":"165","severity":1,"message":"181","line":2,"column":112,"nodeType":"167","messageId":"168","endLine":2,"endColumn":120},{"ruleId":"165","severity":1,"message":"173","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":14},{"ruleId":"165","severity":1,"message":"182","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":19},{"ruleId":"165","severity":1,"message":"183","line":24,"column":11,"nodeType":"167","messageId":"168","endLine":24,"endColumn":15},{"ruleId":"165","severity":1,"message":"184","line":30,"column":11,"nodeType":"167","messageId":"168","endLine":30,"endColumn":22},{"ruleId":"165","severity":1,"message":"185","line":35,"column":12,"nodeType":"167","messageId":"168","endLine":35,"endColumn":17},{"ruleId":"165","severity":1,"message":"186","line":35,"column":19,"nodeType":"167","messageId":"168","endLine":35,"endColumn":27},{"ruleId":"187","severity":1,"message":"188","line":98,"column":21,"nodeType":"189","endLine":98,"endColumn":72},{"ruleId":"165","severity":1,"message":"186","line":7,"column":17,"nodeType":"167","messageId":"168","endLine":7,"endColumn":25},{"ruleId":"161","replacedBy":"190"},{"ruleId":"163","replacedBy":"191"},{"ruleId":"165","severity":1,"message":"192","line":1,"column":75,"nodeType":"167","messageId":"168","endLine":1,"endColumn":82},{"ruleId":"165","severity":1,"message":"193","line":1,"column":84,"nodeType":"167","messageId":"168","endLine":1,"endColumn":88},{"ruleId":"165","severity":1,"message":"194","line":1,"column":90,"nodeType":"167","messageId":"168","endLine":1,"endColumn":98},{"ruleId":"165","severity":1,"message":"195","line":1,"column":100,"nodeType":"167","messageId":"168","endLine":1,"endColumn":112},{"ruleId":"165","severity":1,"message":"196","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":22},{"ruleId":"165","severity":1,"message":"197","line":50,"column":12,"nodeType":"167","messageId":"168","endLine":50,"endColumn":23},{"ruleId":"165","severity":1,"message":"198","line":50,"column":25,"nodeType":"167","messageId":"168","endLine":50,"endColumn":38},{"ruleId":"165","severity":1,"message":"199","line":52,"column":12,"nodeType":"167","messageId":"168","endLine":52,"endColumn":18},{"ruleId":"165","severity":1,"message":"200","line":52,"column":20,"nodeType":"167","messageId":"168","endLine":52,"endColumn":32},{"ruleId":"165","severity":1,"message":"201","line":53,"column":12,"nodeType":"167","messageId":"168","endLine":53,"endColumn":17},{"ruleId":"165","severity":1,"message":"202","line":53,"column":19,"nodeType":"167","messageId":"168","endLine":53,"endColumn":30},{"ruleId":"203","severity":1,"message":"204","line":128,"column":19,"nodeType":"205","messageId":"206","endLine":128,"endColumn":21},{"ruleId":"165","severity":1,"message":"207","line":46,"column":29,"nodeType":"167","messageId":"168","endLine":46,"endColumn":46},{"ruleId":"165","severity":1,"message":"199","line":49,"column":12,"nodeType":"167","messageId":"168","endLine":49,"endColumn":18},{"ruleId":"165","severity":1,"message":"208","line":51,"column":12,"nodeType":"167","messageId":"168","endLine":51,"endColumn":33},{"ruleId":"165","severity":1,"message":"209","line":51,"column":35,"nodeType":"167","messageId":"168","endLine":51,"endColumn":65},{"ruleId":"165","severity":1,"message":"176","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":18},{"ruleId":"165","severity":1,"message":"170","line":8,"column":27,"nodeType":"167","messageId":"168","endLine":8,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":8,"column":35,"nodeType":"167","messageId":"168","endLine":8,"endColumn":40},{"ruleId":"165","severity":1,"message":"172","line":8,"column":42,"nodeType":"167","messageId":"168","endLine":8,"endColumn":48},{"ruleId":"165","severity":1,"message":"166","line":8,"column":50,"nodeType":"167","messageId":"168","endLine":8,"endColumn":59},{"ruleId":"165","severity":1,"message":"210","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":24},{"ruleId":"165","severity":1,"message":"211","line":5,"column":26,"nodeType":"167","messageId":"168","endLine":5,"endColumn":31},{"ruleId":"165","severity":1,"message":"170","line":4,"column":27,"nodeType":"167","messageId":"168","endLine":4,"endColumn":33},{"ruleId":"165","severity":1,"message":"171","line":4,"column":35,"nodeType":"167","messageId":"168","endLine":4,"endColumn":40},{"ruleId":"165","severity":1,"message":"172","line":4,"column":42,"nodeType":"167","messageId":"168","endLine":4,"endColumn":48},{"ruleId":"165","severity":1,"message":"166","line":4,"column":50,"nodeType":"167","messageId":"168","endLine":4,"endColumn":59},{"ruleId":"165","severity":1,"message":"212","line":8,"column":8,"nodeType":"167","messageId":"168","endLine":8,"endColumn":12},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"@typescript-eslint/no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'changeUser' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'HeaderContainer' is assigned a value but never used.","'HeaderSearchForm' is assigned a value but never used.","'SearchPage' is defined but never used.",["213"],["214"],"'Fade' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'HoverRating' is defined but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["213"],["214"],"'Divider' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'ScrollUpButton' is defined but never used.","'userReviews' is assigned a value but never used.","'changeReviews' is assigned a value but never used.","'offset' is assigned a value but never used.","'changeOffset' is assigned a value but never used.","'limit' is assigned a value but never used.","'changeLimit' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'changeDescription' is assigned a value but never used.","'descriptionEditOpened' is assigned a value but never used.","'changeDescriptionEditingStatus' is assigned a value but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'wood' is defined but never used.","no-global-assign","no-unsafe-negation"]