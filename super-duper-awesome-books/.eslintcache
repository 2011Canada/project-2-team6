[{"C:\\Users\\Stephen Wong\\Documents\\project-2-team6-frontEnd\\super-duper-awesome-books\\src\\index.tsx":"1","C:\\Users\\Stephen Wong\\Documents\\project-2-team6-frontEnd\\super-duper-awesome-books\\src\\reportWebVitals.ts":"2","C:\\Users\\Stephen Wong\\Documents\\project-2-team6-frontEnd\\super-duper-awesome-books\\src\\App.tsx":"3","C:\\Users\\Stephen Wong\\Documents\\project-2-team6-frontEnd\\super-duper-awesome-books\\src\\component\\OtherProfile.tsx":"4","C:\\Users\\Stephen Wong\\Documents\\project-2-team6-frontEnd\\super-duper-awesome-books\\src\\component\\MyProfile.tsx":"5","C:\\Users\\Stephen Wong\\Documents\\project-2-team6-frontEnd\\super-duper-awesome-books\\src\\component\\ClubRegistration.tsx":"6","C:\\Users\\Stephen Wong\\Documents\\project-2-team6-frontEnd\\super-duper-awesome-books\\src\\component\\Club.tsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1015,"mtime":1610749102882,"results":"11","hashOfConfig":"9"},{"size":6636,"mtime":1610255968053,"results":"12","hashOfConfig":"9"},{"size":8397,"mtime":1610414016365,"results":"13","hashOfConfig":"9"},{"size":3080,"mtime":1610738683077,"results":"14","hashOfConfig":"9"},{"size":14291,"mtime":1610748983780,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"kx4szv",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Stephen Wong\\Documents\\project-2-team6-frontEnd\\super-duper-awesome-books\\src\\index.tsx",[],["34","35"],"C:\\Users\\Stephen Wong\\Documents\\project-2-team6-frontEnd\\super-duper-awesome-books\\src\\reportWebVitals.ts",[],"C:\\Users\\Stephen Wong\\Documents\\project-2-team6-frontEnd\\super-duper-awesome-books\\src\\App.tsx",["36","37","38","39"],"C:\\Users\\Stephen Wong\\Documents\\project-2-team6-frontEnd\\super-duper-awesome-books\\src\\component\\OtherProfile.tsx",["40","41","42","43"],"import { Button, Card, CardActions, CardContent, CardMedia, createStyles, Divider, List, ListItem,ListItemText, makeStyles, Theme, Typography} from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n        \"display\": \"block\",\r\n        \"margin-left\": \"auto\",\r\n        \"margin-right\": \"auto\",\r\n    },\r\n    root_review: {\r\n        '& .MuiInput-underline': {\r\n            // Remove the ripple effect on input\r\n            '&:after': {\r\n              borderBottom: 'initial',\r\n            },\r\n        },\r\n      width: '100%',\r\n      maxWidth: '100ch',\r\n      backgroundColor: theme.palette.background.paper,\r\n\r\n\r\n    },\r\n    inline: {\r\n      display: 'inline',\r\n    },\r\n    review_container: {\r\n        \"display\": \"block\",\r\n        \"margin-left\": \"auto\",\r\n        \"margin-right\": \"auto\",\r\n        \"margin-top\": \"5vh\",\r\n        \"width\": \"40%\",\r\n    },\r\n    editButton: {\r\n        fontSize: \"1.5vh\",\r\n        float: \"right\",\r\n        bottom: \"0\"\r\n    }\r\n  }),\r\n);\r\n\r\n//Requirements: Prop user object with username and userid, should be enclosed in an authentication component\r\nexport const OtherProfile: React.FunctionComponent<any> = (props) => {\r\n    const [userDescription, changeDescription] = useState(\"I am the greatest person in the entirety of the universe.\")\r\n    const [userReviews, changeReviews] = useState(new Array<any>())\r\n    const [profileImage, changeProfileImage] = useState(\"\")\r\n    const [offset, changeOffset] = useState(0)\r\n    const [limit, changeLimit] = useState(5)\r\n    const [descriptionEditOpened, changeDescriptionEditingStatus] = useState(false)\r\n\r\n    //Runs on first load\r\n    useEffect(() => {\r\n        //TODO: Replace example content with content from db, fetched using the user's ID as given by props\r\n\r\n\r\n        let exampleReviews: Object[] = [\r\n            {\r\n                bookId: 1,\r\n                reviewId: 1,\r\n                reviewTitle: \"Absolutely terrible\",\r\n                reviewDescription: \"This book made my life worse than ever before after reading the first 2 pages, thanks.\",\r\n                rating: 0\r\n            },\r\n            {\r\n                bookId: 2,\r\n                reviewId: 2,\r\n                reviewTitle: \"Greatest book ever written in the history of the universe.\",\r\n                reviewDescription: \"You must buy it and read it. Also, buy one for your parents, your siblings, your children, your dog. They will love it and forever love you for buying it for them, I promise you.\",\r\n                rating: 10\r\n            },\r\n\r\n        ]\r\n\r\n        changeReviews(exampleReviews)\r\n\r\n\r\n        //fetch pfp from db \r\n\r\n        getProfileImage();\r\n\r\n    }, [])\r\n\r\n    let showPreviousReviews = () => {\r\n        if (limit - 5 > 0) {\r\n            changeOffset(limit - 5)\r\n            changeLimit(limit - 5)\r\n        }\r\n\r\n    }\r\n\r\n    let showNextReviews = () => {\r\n        if (limit <= userReviews.length) {\r\n            changeOffset(limit)\r\n            changeLimit(limit + 5)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    let getProfileImage = async () => {\r\n\r\n        //get image from database\r\n        let res = await axios.get(\"https://upload.wikimedia.org/wikipedia/commons/c/cc/Tellissaare.JPG\",\r\n            { responseType: 'arraybuffer' }\r\n        )\r\n        const base64 = btoa(\r\n            new Uint8Array(res.data).reduce(\r\n                (data, byte) => data + String.fromCharCode(byte),\r\n                '',\r\n            ),\r\n        );\r\n        changeProfileImage(\"data:;base64,\" + base64)\r\n\r\n\r\n    }\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"dashboard\">\r\n                <Card className={classes.root}>\r\n                    \r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={props.user.username}\r\n                            height=\"140\"\r\n                            image={profileImage}\r\n                            title={props.user.username}\r\n                        />\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                {props.user.username}\r\n                            </Typography>\r\n                                 \r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                { userDescription}\r\n                            </Typography>\r\n         \r\n                        </CardContent>\r\n                   \r\n                    <CardActions>\r\n                        <Button size=\"small\" color=\"primary\">\r\n                            Add Friend\r\n                    </Button>\r\n\r\n                    </CardActions>\r\n                </Card>\r\n\r\n            </div>\r\n\r\n            <div className={classes.review_container}>\r\n\r\n            <List className={classes.root_review}>\r\n\r\n                {userReviews.slice(limit - 5, limit).map((review, i) => {\r\n                    return (\r\n                        \r\n                    <div className= \"review-element\">\r\n                \r\n                    <ListItem alignItems=\"flex-start\">\r\n                \r\n                        <ListItemText\r\n                            primary={review.reviewTitle}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.inline}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        {\"Rating: \"+ review.rating}\r\n                                    </Typography>\r\n                                    {\" â€” \"+review.reviewDescription}\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                    </div>\r\n                            \r\n                    )\r\n                }) \r\n                \r\n                }</List>\r\n                <div><button type=\"button\" onClick={() => showPreviousReviews()}>Previous 10</button></div>\r\n                <div><button type=\"button\" onClick={() => showNextReviews()}>Next 10</button></div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}\r\n","C:\\Users\\Stephen Wong\\Documents\\project-2-team6-frontEnd\\super-duper-awesome-books\\src\\component\\MyProfile.tsx",["44","45","46","47","48"],"import {  Button, Card,  CardActions, CardContent, CardMedia, createStyles, Divider, Link, List, ListItem, ListItemText, makeStyles, TextField, Theme, Typography } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport { resolve } from 'dns';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport {Link as RouterLink} from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n        \"display\": \"block\",\r\n        \"margin-left\": \"auto\",\r\n        \"margin-right\": \"auto\",\r\n    },\r\n    root_review: {\r\n        '& .MuiInput-underline': {\r\n            // Remove the ripple effect on input\r\n            '&:after': {\r\n              borderBottom: 'initial',\r\n            },\r\n        },\r\n      width: '100%',\r\n      maxWidth: '100ch',\r\n      backgroundColor: theme.palette.background.paper,\r\n\r\n\r\n    },\r\n    media: {\r\n        height: 140,\r\n      },\r\n    inline: {\r\n      display: 'inline',\r\n    },\r\n    review_container: {\r\n        \"display\": \"block\",\r\n        \"margin-left\": \"auto\",\r\n        \"margin-right\": \"auto\",\r\n        \"margin-top\": \"5vh\",\r\n        \"width\": \"40%\",\r\n    },\r\n    editButton: {\r\n        fontSize: \"1.5vh\",\r\n        float: \"right\",\r\n        bottom: \"0\"\r\n    }\r\n  }),\r\n);\r\n\r\n//Requirements: Prop user object with username and userid, should be enclosed in an authentication component\r\nexport const MyProfile: React.FunctionComponent<any> = (props) => {\r\n    const [userDescription, changeDescription] = useState(\"\")\r\n    const [userBookmarks, changeBookmarks] = useState(new Array<any>())\r\n    const [profileImage, changeProfileImage] = useState(\"\")\r\n    const [offset, changeOffset] = useState(0)\r\n    const [limit, changeLimit] = useState(5)\r\n    const [descriptionEditOpened, changeDescriptionEditingStatus] = useState(false)\r\n\r\n    //Runs on first load\r\n    useEffect( () => {\r\n        //TODO: Replace example content with content from db, fetched using the user's ID as given by props\r\n\r\n\r\n        let exampleDescription = \"I am the greatest person in the entirety of the universe.\"\r\n        changeDescription(exampleDescription)\r\n\r\n        /** \r\n        let exampleReviews: Object[] = [\r\n            {\r\n                bookId: 1,\r\n                bookTitle: \"Harry Potter and the Broken Washing Machine\",\r\n                bookImage: \"\",\r\n            },\r\n            {\r\n                bookId: 2,\r\n                bookTitle: \"The Lord of the Ringolos\",\r\n                bookImage: \"\",\r\n            },\r\n            \r\n        ]\r\n        */\r\n       axios.get(\"http://localhost:8080/bookmarks/\"+props.user.userid ).then( res => {\r\n        let data:Array<any> = res.data;\r\n        changeBookmarks(data)\r\n       }\r\n\r\n       )\r\n\r\n\r\n\r\n        //TO DO: fetch pfp from db \r\n\r\n        getProfileImage();\r\n\r\n    }, [])\r\n\r\n    let showPreviousReviews = () => {\r\n        if (limit - 5 > 0) {\r\n            changeOffset(limit - 5)\r\n            changeLimit(limit - 5)\r\n        }\r\n\r\n    }\r\n\r\n    let showNextReviews = () => {\r\n        if (limit <= userBookmarks.length) {\r\n            changeOffset(limit)\r\n            changeLimit(limit + 5)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    let getProfileImage = async () => {\r\n\r\n        //get image from database\r\n        let res = await axios.get(\"https://upload.wikimedia.org/wikipedia/commons/c/cc/Tellissaare.JPG\",\r\n            { responseType: 'arraybuffer' }\r\n        )\r\n        const base64 = btoa(\r\n            new Uint8Array(res.data).reduce(\r\n                (data, byte) => data + String.fromCharCode(byte),\r\n                '',\r\n            ),\r\n        );\r\n        changeProfileImage(\"data:;base64,\" + base64)\r\n\r\n\r\n    }\r\n\r\n    let toggleEditDescription =  () => {\r\n        changeDescriptionEditingStatus(!descriptionEditOpened)\r\n    }\r\n    let enterKeyPress = (e:React.KeyboardEvent) => {\r\n        if(e.key == 'Enter' && descriptionEditOpened){\r\n           //TO DO: post request to change description\r\n            \r\n            toggleEditDescription()\r\n           \r\n        }\r\n     }\r\n    \r\n    let handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        changeDescription(event.target.value)\r\n    }\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        \r\n        <div className=\"content\">\r\n            \r\n            <div className=\"dashboard\">\r\n                <Card className={classes.root}>\r\n                    \r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={props.user.username}\r\n                            height=\"140\"\r\n                            image={profileImage}\r\n                            title={props.user.username}\r\n                        />\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                {props.user.username}\r\n                            </Typography>\r\n                            { !descriptionEditOpened &&\r\n                                    \r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    { userDescription}\r\n                                </Typography>\r\n                            }\r\n                            { descriptionEditOpened &&\r\n                                <TextField\r\n                                id=\"outlined-multiline-flexible\"\r\n                                multiline\r\n                                rowsMax={4}\r\n                                value={userDescription}\r\n                                onKeyPress = {enterKeyPress}\r\n                                onChange = {handleDescriptionChange}\r\n                                variant=\"outlined\"\r\n                              />\r\n                            }\r\n                            \r\n                            <Button className={classes.editButton} onClick= {toggleEditDescription}>Edit Description</Button>\r\n                        </CardContent>\r\n                   \r\n                    <CardActions>\r\n\r\n                    </CardActions>\r\n                </Card>\r\n\r\n            </div>\r\n\r\n            <div className={classes.review_container}>\r\n\r\n            <List className={classes.root_review}>\r\n\r\n                {userBookmarks.slice(limit - 5, limit).map((bookmark, i) => {\r\n                    return (\r\n                        \r\n                    <div className= \"review-element\">\r\n                    <Link underline='none' component={RouterLink} to={\"/books/\"+bookmark.bookId}>\r\n                    <CardMedia \r\n                        className={classes.media}\r\n                            image={profileImage}//placeholder\r\n                         title=\"book image\"\r\n                        />\r\n                    </Link>\r\n                    <ListItem alignItems=\"flex-start\">\r\n                        \r\n                        <ListItemText\r\n                        //TODO: Add links to the books\r\n                            primary={bookmark.bookTitle}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.inline}\r\n                                        color=\"textPrimary\"\r\n                                        \r\n                                    >\r\n                                        {\"Image goes here: \"+ bookmark.bookImage}\r\n                                        \r\n                                    </Typography>\r\n                                    {\" â€” \"+bookmark.bookDescription}\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                    </div>\r\n                            \r\n                    )\r\n                }) \r\n                \r\n                }</List>\r\n                <div><button type=\"button\" onClick={() => showPreviousReviews()}>Previous 10</button></div>\r\n                <div><button type=\"button\" onClick={() => showNextReviews()}>Next 10</button></div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}\r\n","C:\\Users\\Stephen Wong\\Documents\\project-2-team6-frontEnd\\super-duper-awesome-books\\src\\component\\ClubRegistration.tsx",["49"],"import { Button, createStyles, makeStyles, TextField, Theme } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React, { useState } from 'react'\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    buttons: {\r\n        margin: \"1vh\"\r\n    }\r\n  }),\r\n);\r\n\r\n\r\nexport const ClubRegistration:React.FunctionComponent<any> = (props) => {\r\n    const classes = useStyles();\r\n    const [clubName, changeClubName] = useState(\"\")\r\n    const [clubDescription, changeClubDescription] = useState(\"\")\r\n    const [clubImage, changeClubImage] = useState({})\r\n    let fileInput:React.RefObject<HTMLInputElement> = React.createRef();\r\n\r\n    let handleClubNameChange = (event: React.ChangeEvent<HTMLInputElement>)  => {\r\n        changeClubName(event.target.value)\r\n    }\r\n\r\n    let handleClubDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>)  => {\r\n        changeClubDescription(event.target.value)\r\n    }\r\n\r\n    let onFileUpload = e => {\r\n        fileInput.current.click();\r\n        const file:Blob = e.target.files[0];\r\n        var reader = new FileReader();\r\n        var fileByteArray = [];\r\n        reader.readAsArrayBuffer(file);\r\n        reader.onloadend = function (evt) {\r\n            if (evt && evt.target.readyState == FileReader.DONE) {\r\n            var arrayBuffer:any = evt.target.result,\r\n            array = new Uint8Array(arrayBuffer);\r\n                for (var i = 0; i < array.length; i++) {\r\n                    fileByteArray.push(array[i]);\r\n                }\r\n            }\r\n        }       \r\n        changeClubImage(fileByteArray) \r\n    }\r\n    \r\n    let handleSubmit = () => {\r\n        let clubData = {\r\n            clubName,\r\n            clubDescription,\r\n            clubImage\r\n        }\r\n        //post request to create a club using clubData\r\n\r\n        axios.post(\"http://localhost:8080/clubs\", clubData);\r\n        \r\n    }\r\n\r\n\r\n    return(\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <div>\r\n            <TextField required id=\"standard-required\" value = {clubName} label=\"Club Name\" onChange={handleClubNameChange}/>\r\n            </div>\r\n            <div>\r\n            <TextField\r\n            id=\"standard-multiline-flexible\"\r\n            label=\"Club Description\"\r\n            multiline\r\n            rowsMax={4}\r\n            value={clubDescription}\r\n            onChange={handleClubDescriptionChange}\r\n            />\r\n            </div>\r\n            <div>\r\n            <Button className= {classes.buttons} variant=\"contained\"  component=\"label\">\r\n                Upload Club Profile Image\r\n            <input type=\"file\" accept='image/*' ref={fileInput} onChange={onFileUpload} hidden />\r\n            </Button>\r\n            </div>\r\n            <div>\r\n            <Button className= {classes.buttons} variant=\"contained\" onClick = {handleSubmit} color=\"primary\">\r\n                Submit\r\n            </Button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n","C:\\Users\\Stephen Wong\\Documents\\project-2-team6-frontEnd\\super-duper-awesome-books\\src\\component\\Club.tsx",["50","51","52","53","54","55","56","57","58","59","60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":34,"nodeType":"68","messageId":"69","endLine":2,"endColumn":38},{"ruleId":"66","severity":1,"message":"70","line":2,"column":47,"nodeType":"68","messageId":"69","endLine":2,"endColumn":53},{"ruleId":"66","severity":1,"message":"71","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":12},{"ruleId":"66","severity":1,"message":"72","line":12,"column":16,"nodeType":"68","messageId":"69","endLine":12,"endColumn":26},{"ruleId":"66","severity":1,"message":"73","line":48,"column":29,"nodeType":"68","messageId":"69","endLine":48,"endColumn":46},{"ruleId":"66","severity":1,"message":"74","line":51,"column":12,"nodeType":"68","messageId":"69","endLine":51,"endColumn":18},{"ruleId":"66","severity":1,"message":"75","line":53,"column":12,"nodeType":"68","messageId":"69","endLine":53,"endColumn":33},{"ruleId":"66","severity":1,"message":"76","line":53,"column":35,"nodeType":"68","messageId":"69","endLine":53,"endColumn":65},{"ruleId":"66","severity":1,"message":"77","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":17},{"ruleId":"66","severity":1,"message":"78","line":5,"column":10,"nodeType":"68","messageId":"69","endLine":5,"endColumn":18},{"ruleId":"66","severity":1,"message":"74","line":56,"column":12,"nodeType":"68","messageId":"69","endLine":56,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":96,"column":8,"nodeType":"81","endLine":96,"endColumn":10,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":136,"column":18,"nodeType":"85","messageId":"86","endLine":136,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":43,"column":46,"nodeType":"85","messageId":"86","endLine":43,"endColumn":48},{"ruleId":"66","severity":1,"message":"67","line":1,"column":132,"nodeType":"68","messageId":"69","endLine":1,"endColumn":136},{"ruleId":"66","severity":1,"message":"87","line":1,"column":234,"nodeType":"68","messageId":"69","endLine":1,"endColumn":247},{"ruleId":"66","severity":1,"message":"88","line":5,"column":17,"nodeType":"68","messageId":"69","endLine":5,"endColumn":27},{"ruleId":"66","severity":1,"message":"89","line":12,"column":11,"nodeType":"68","messageId":"69","endLine":12,"endColumn":16},{"ruleId":"66","severity":1,"message":"90","line":103,"column":12,"nodeType":"68","messageId":"69","endLine":103,"endColumn":22},{"ruleId":"66","severity":1,"message":"91","line":112,"column":13,"nodeType":"68","messageId":"69","endLine":112,"endColumn":21},{"ruleId":"66","severity":1,"message":"92","line":113,"column":13,"nodeType":"68","messageId":"69","endLine":113,"endColumn":28},{"ruleId":"66","severity":1,"message":"93","line":114,"column":13,"nodeType":"68","messageId":"69","endLine":114,"endColumn":22},{"ruleId":"66","severity":1,"message":"94","line":115,"column":13,"nodeType":"68","messageId":"69","endLine":115,"endColumn":24},{"ruleId":"66","severity":1,"message":"95","line":116,"column":13,"nodeType":"68","messageId":"69","endLine":116,"endColumn":25},{"ruleId":"79","severity":1,"message":"96","line":170,"column":8,"nodeType":"81","endLine":170,"endColumn":10,"suggestions":"97"},{"ruleId":"66","severity":1,"message":"98","line":175,"column":9,"nodeType":"68","messageId":"69","endLine":175,"endColumn":24},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'logo' is defined but never used.","'changeUser' is assigned a value but never used.","'changeDescription' is assigned a value but never used.","'offset' is assigned a value but never used.","'descriptionEditOpened' is assigned a value but never used.","'changeDescriptionEditingStatus' is assigned a value but never used.","'resolve' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.user.userid'. Either include it or remove the dependency array.","ArrayExpression",["101"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRadioGroup' is defined but never used.","'RouterLink' is defined but never used.","'IUser' is defined but never used.","'bookOffset' is assigned a value but never used.","'clubName' is defined but never used.","'clubDescription' is defined but never used.","'clubBooks' is defined but never used.","'clubMembers' is defined but never used.","'clubComments' is defined but never used.","React Hook useEffect has missing dependencies: 'props.clubId' and 'props.userId'. Either include them or remove the dependency array.",["102"],"'getProfileImage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [props.user.userid]",{"range":"107","text":"108"},"Update the dependencies array to be: [props.clubId, props.userId]",{"range":"109","text":"110"},[2844,2846],"[props.user.userid]",[5761,5763],"[props.clubId, props.userId]"]